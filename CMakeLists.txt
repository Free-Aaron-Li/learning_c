# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(io_and_char LANGUAGES C)

# target
add_executable(io_and_char "")
set_target_properties(io_and_char PROPERTIES OUTPUT_NAME "io_and_char")
set_target_properties(io_and_char PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/bin")
target_include_directories(io_and_char PRIVATE
    io_and_char/include
    build/.gens/io_and_char/linux/x86_64/release/platform/windows/idl
)
target_include_directories(io_and_char INTERFACE
    build/.gens/io_and_char/linux/x86_64/release/platform/windows/idl
)
target_compile_options(io_and_char PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CUDA>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(io_and_char PRIVATE $<$<CONFIG:Release>:-O2>)
else()
    target_compile_options(io_and_char PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(io_and_char PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET io_and_char PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_options(io_and_char PRIVATE
    -m64
)
target_sources(io_and_char PRIVATE
    io_and_char/src/main.c
    io_and_char/src/hello_world.c
)

# target
add_executable(learning_c "")
set_target_properties(learning_c PROPERTIES OUTPUT_NAME "learning_c")
set_target_properties(learning_c PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/bin")
add_dependencies(learning_c io_and_char)
target_include_directories(learning_c PRIVATE
    build/.gens/learning_c/linux/x86_64/release/platform/windows/idl
    build/.gens/io_and_char/linux/x86_64/release/platform/windows/idl
)
target_include_directories(learning_c INTERFACE
    build/.gens/learning_c/linux/x86_64/release/platform/windows/idl
)
target_compile_options(learning_c PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CUDA>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(learning_c PRIVATE $<$<CONFIG:Release>:-O2>)
else()
    target_compile_options(learning_c PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(learning_c PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET learning_c PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_options(learning_c PRIVATE
    -m64
)
target_sources(learning_c PRIVATE
    src/main.c
)

