# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(expression LANGUAGES C)

# target
add_executable(expression "")
set_target_properties(expression PROPERTIES OUTPUT_NAME "expression")
set_target_properties(expression PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/bin")
target_include_directories(expression PRIVATE
    expression/include
    build/.gens/expression/linux/x86_64/debug/platform/windows/idl
)
target_include_directories(expression INTERFACE
    build/.gens/expression/linux/x86_64/debug/platform/windows/idl
)
target_compile_options(expression PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-save-temps=obj>
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:CUDA>:-G>
)
set_target_properties(expression PROPERTIES C_EXTENSIONS OFF)
target_compile_features(expression PRIVATE c_std_17)
if(MSVC)
    target_compile_options(expression PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(expression PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(expression PRIVATE -Zi)
else()
    target_compile_options(expression PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET expression PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(expression PRIVATE
    m
)
target_link_options(expression PRIVATE
    -m64
)
target_sources(expression PRIVATE
    expression/src/main.c
    expression/src/expression.c
    expression/src/exercise.c
)

# target
add_executable(function "")
set_target_properties(function PROPERTIES OUTPUT_NAME "function")
set_target_properties(function PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/bin")
target_include_directories(function PRIVATE
    function/include
    build/.gens/function/linux/x86_64/debug/platform/windows/idl
)
target_include_directories(function INTERFACE
    build/.gens/function/linux/x86_64/debug/platform/windows/idl
)
target_compile_options(function PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-save-temps=obj>
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:CUDA>:-G>
)
set_target_properties(function PROPERTIES C_EXTENSIONS OFF)
target_compile_features(function PRIVATE c_std_17)
if(MSVC)
    target_compile_options(function PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(function PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(function PRIVATE -Zi)
else()
    target_compile_options(function PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET function PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(function PRIVATE
    m
)
target_link_options(function PRIVATE
    -m64
)
target_sources(function PRIVATE
    function/src/main.c
    function/src/function.c
    function/src/exercise.c
)

# target
add_executable(io_and_char "")
set_target_properties(io_and_char PROPERTIES OUTPUT_NAME "io_and_char")
set_target_properties(io_and_char PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/bin")
target_include_directories(io_and_char PRIVATE
    io_and_char/include
    build/.gens/io_and_char/linux/x86_64/debug/platform/windows/idl
)
target_include_directories(io_and_char INTERFACE
    build/.gens/io_and_char/linux/x86_64/debug/platform/windows/idl
)
target_compile_options(io_and_char PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-save-temps=obj>
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:CUDA>:-G>
)
set_target_properties(io_and_char PROPERTIES C_EXTENSIONS OFF)
target_compile_features(io_and_char PRIVATE c_std_17)
if(MSVC)
    target_compile_options(io_and_char PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(io_and_char PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(io_and_char PRIVATE -Zi)
else()
    target_compile_options(io_and_char PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET io_and_char PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(io_and_char PRIVATE
    m
)
target_link_options(io_and_char PRIVATE
    -m64
)
target_sources(io_and_char PRIVATE
    io_and_char/src/variable_assignment.c
    io_and_char/src/main.c
    io_and_char/src/exercise.c
    io_and_char/src/hello_world.c
)

# target
add_executable(learning_c "")
set_target_properties(learning_c PROPERTIES OUTPUT_NAME "learning_c")
set_target_properties(learning_c PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/bin")
add_dependencies(learning_c pointer function statements_and_arrays expression io_and_char)
target_include_directories(learning_c PRIVATE
    build/.gens/learning_c/linux/x86_64/debug/platform/windows/idl
    build/.gens/io_and_char/linux/x86_64/debug/platform/windows/idl
    build/.gens/expression/linux/x86_64/debug/platform/windows/idl
    build/.gens/statements_and_arrays/linux/x86_64/debug/platform/windows/idl
    build/.gens/function/linux/x86_64/debug/platform/windows/idl
    build/.gens/pointer/linux/x86_64/debug/platform/windows/idl
)
target_include_directories(learning_c INTERFACE
    build/.gens/learning_c/linux/x86_64/debug/platform/windows/idl
)
target_compile_options(learning_c PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-save-temps=obj>
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:CUDA>:-G>
)
set_target_properties(learning_c PROPERTIES C_EXTENSIONS OFF)
target_compile_features(learning_c PRIVATE c_std_17)
if(MSVC)
    target_compile_options(learning_c PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(learning_c PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(learning_c PRIVATE -Zi)
else()
    target_compile_options(learning_c PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET learning_c PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(learning_c PRIVATE
    m
)
target_link_options(learning_c PRIVATE
    -m64
)
target_sources(learning_c PRIVATE
    src/main.c
)

# target
add_executable(pointer "")
set_target_properties(pointer PROPERTIES OUTPUT_NAME "pointer")
set_target_properties(pointer PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/bin")
target_include_directories(pointer PRIVATE
    pointer/include
    build/.gens/pointer/linux/x86_64/debug/platform/windows/idl
)
target_include_directories(pointer INTERFACE
    build/.gens/pointer/linux/x86_64/debug/platform/windows/idl
)
target_compile_options(pointer PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-save-temps=obj>
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:CUDA>:-G>
)
set_target_properties(pointer PROPERTIES C_EXTENSIONS OFF)
target_compile_features(pointer PRIVATE c_std_17)
if(MSVC)
    target_compile_options(pointer PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(pointer PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(pointer PRIVATE -Zi)
else()
    target_compile_options(pointer PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET pointer PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(pointer PRIVATE
    m
)
target_link_options(pointer PRIVATE
    -m64
)
target_sources(pointer PRIVATE
    pointer/src/main.c
    pointer/src/pointer_array.c
    pointer/src/pointer_basic.c
)

# target
add_executable(statements_and_arrays "")
set_target_properties(statements_and_arrays PROPERTIES OUTPUT_NAME "statements_and_arrays")
set_target_properties(statements_and_arrays PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/bin")
target_include_directories(statements_and_arrays PRIVATE
    statements_and_arrays/include
    build/.gens/statements_and_arrays/linux/x86_64/debug/platform/windows/idl
)
target_include_directories(statements_and_arrays INTERFACE
    build/.gens/statements_and_arrays/linux/x86_64/debug/platform/windows/idl
)
target_compile_options(statements_and_arrays PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-save-temps=obj>
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:CUDA>:-G>
)
set_target_properties(statements_and_arrays PROPERTIES C_EXTENSIONS OFF)
target_compile_features(statements_and_arrays PRIVATE c_std_17)
if(MSVC)
    target_compile_options(statements_and_arrays PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(statements_and_arrays PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(statements_and_arrays PRIVATE -Zi)
else()
    target_compile_options(statements_and_arrays PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET statements_and_arrays PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(statements_and_arrays PRIVATE
    m
)
target_link_options(statements_and_arrays PRIVATE
    -m64
)
target_sources(statements_and_arrays PRIVATE
    statements_and_arrays/src/main.c
    statements_and_arrays/src/exercise.c
    statements_and_arrays/src/statements_and_array.c
)

